name: CI & Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
        working-directory: packages/feedbacker
      
      - name: Run type check
        run: npm run typecheck --workspace=feedbacker-react || true
      
      - name: Run unit tests
        run: npm test --if-present
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: packages/feedbacker
      
      - name: Run E2E tests
        run: npm run test:e2e
        working-directory: packages/feedbacker
      
      - name: Build demo
        run: npm run build:demo
      
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.node-version }}
          path: packages/feedbacker/playwright-report/
          retention-days: 30

  publish-npm:
    # Only run on version tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Needed for provenance
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Extract version from tag
        id: extract_version
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Extracted version: ${VERSION}"
      
      - name: Update package.json version
        run: |
          cd packages/feedbacker
          # Update version to match tag
          npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version --allow-same-version
          echo "âœ… Updated package.json to version ${{ steps.extract_version.outputs.VERSION }}"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
        working-directory: packages/feedbacker
      
      - name: Publish to npm
        run: npm publish --access public --provenance
        working-directory: packages/feedbacker
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    # Only run on version tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish-npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for changelog generation
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Get previous tag
        id: previoustag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          if [ -z "${{ steps.previoustag.outputs.PREVIOUS_TAG }}" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## ðŸŽ‰ Initial Release" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "First release of feedbacker-react!" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log ${{ steps.previoustag.outputs.PREVIOUS_TAG }}..HEAD --pretty=format:"* %s by @%an" --no-merges >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Feedbacker React v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## ðŸ“¦ Installation
            
            ```bash
            npm install feedbacker-react@${{ steps.get_version.outputs.VERSION }}
            ```
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## ðŸ“š Links
            
            - [NPM Package](https://www.npmjs.com/package/feedbacker-react)
            - [Documentation](https://github.com/bebsworthy/feedbacker#readme)
            - [Demo](https://bebsworthy.github.io/feedbacker/)
            
            ---
            
            **Full Changelog**: https://github.com/bebsworthy/feedbacker/compare/${{ steps.previoustag.outputs.PREVIOUS_TAG }}...${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') || contains(github.ref, '-rc') }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-demo:
    # Only deploy on version tags (releases)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish-npm  # Deploy after successful NPM publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    # Removed environment protection to allow tag deployments
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library and demo
        run: |
          npm run build
          npm run build:demo
        env:
          BASE_URL: /feedbacker/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './packages/demo/dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4