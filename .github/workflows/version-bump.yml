name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Bump version
        id: version
        run: |
          cd packages/feedbacker
          # Bump version based on input
          if [ "${{ github.event.inputs.version }}" == "prerelease" ]; then
            npm version prerelease --preid=beta --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          
          # Get the new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_OUTPUT
          
          # Update root package.json version for consistency (optional)
          cd ../..
          npm version ${NEW_VERSION} --no-git-tag-version --allow-same-version || true
      
      - name: Update CHANGELOG
        run: |
          VERSION=${{ steps.version.outputs.NEW_VERSION }}
          DATE=$(date +%Y-%m-%d)
          
          # Create new changelog entry
          cat > CHANGELOG.tmp.md << EOF
          # Changelog
          
          ## [v${VERSION}] - ${DATE}
          
          ### Added
          - _Add new features here_
          
          ### Changed
          - _Add changes here_
          
          ### Fixed
          - _Add fixes here_
          
          EOF
          
          # Append existing changelog (skip first line)
          if [ -f CHANGELOG.md ]; then
            tail -n +2 CHANGELOG.md >> CHANGELOG.tmp.md
          fi
          
          mv CHANGELOG.tmp.md CHANGELOG.md
      
      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: bump version to v${{ steps.version.outputs.NEW_VERSION }}"
      
      - name: Push changes
        run: |
          git push origin main
      
      - name: Create and push tag
        run: |
          git tag v${{ steps.version.outputs.NEW_VERSION }}
          git push origin v${{ steps.version.outputs.NEW_VERSION }}
      
      - name: Trigger Release
        run: |
          echo "âœ… Version bumped to v${{ steps.version.outputs.NEW_VERSION }}"
          echo "ðŸš€ Release workflow will be triggered automatically by the new tag"